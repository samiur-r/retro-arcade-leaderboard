name: Deploy to EC2

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
            | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Build and Push Docker Images
        run: |
          docker build -f apps/web/Dockerfile -t $ECR_REGISTRY/web:latest .
          docker push $ECR_REGISTRY/web:latest

          docker build -f apps/game-service/Dockerfile -t $ECR_REGISTRY/game-service:latest .
          docker push $ECR_REGISTRY/game-service:latest

          docker build -f apps/score-service/Dockerfile -t $ECR_REGISTRY/score-service:latest .
          docker push $ECR_REGISTRY/score-service:latest

          docker build -f apps/stats-service/Dockerfile -t $ECR_REGISTRY/stats-service:latest .
          docker push $ECR_REGISTRY/stats-service:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            cd ~/retro-arcade-leaderboard &&
            git pull origin main &&
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} |
              docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }} &&
            docker-compose pull &&
            docker-compose up -d
          "
