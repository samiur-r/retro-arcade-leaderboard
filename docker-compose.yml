services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: rabbitmq

  game-db:
    image: postgres:15
    container_name: game-db
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - envs/game-db/.env
    volumes:
      - game_db_data:/var/lib/postgresql/data

  score-db:
    image: postgres:15
    container_name: score-db
    restart: always
    ports:
      - "5434:5432"
    env_file:
      - envs/score-db/.env
    volumes:
      - score_db_data:/var/lib/postgresql/data

  stats-db:
    image: postgres:15
    container_name: stats-db
    restart: always
    ports:
      - "5435:5432"
    env_file:
      - envs/stats-db/.env
    volumes:
      - stats_db_data:/var/lib/postgresql/data

  game-service:
    image: 343727212627.dkr.ecr.eu-north-1.amazonaws.com/game-service:latest
    container_name: game-service
    ports:
      - "5001:5001"
    depends_on:
      - game-db
    env_file:
      - apps/game-service/.env.docker

  score-service:
    image: 343727212627.dkr.ecr.eu-north-1.amazonaws.com/score-service:latest
    container_name: score-service
    depends_on:
      - rabbitmq
      - score-db
    ports:
      - "5002:5002"
    env_file:
      - apps/score-service/.env.docker

  stats-service:
    image: 343727212627.dkr.ecr.eu-north-1.amazonaws.com/stats-service:latest
    container_name: stats-service
    ports:
      - "5003:5003"
    depends_on:
      - stats-db
    env_file:
      - apps/stats-service/.env.docker

  web:
    image: 343727212627.dkr.ecr.eu-north-1.amazonaws.com/web:latest
    container_name: web
    depends_on:
      - game-service
      - score-service
      - stats-service
    ports:
      - "3000:3000"
    env_file:
      - apps/web/.env.docker

volumes:
  game_db_data:
  score_db_data:
  stats_db_data:
